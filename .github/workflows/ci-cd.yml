name: CI/CD com Docker - Homologação e Produção

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:
    inputs:
      target_env:
        description: 'Deploy para qual ambiente? (homolog/prod)'
        required: true
        default: 'prod'

jobs:
  build-and-deploy-homolog:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Instalar dependências e rodar testes backend
        run: |
          cd backend
          npm ci
          npm run test

      - name: Buildar imagens Docker (Frontend e Backend)
        run: |
          docker build -t meuapp-frontend ./frontend
          docker build -t meuapp-backend ./backend

      - name: Salvar as imagens Docker em tarball
        run: |
          docker save meuapp-frontend meuapp-backend > build_homolog.tar

      - name: Enviar build para a máquina de Homologação via SSH
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOMOLOG_HOST }}
          username: ${{ secrets.HOMOLOG_USER }}
          key: ${{ secrets.HOMOLOG_SSH_KEY }}
          source: "build_homolog.tar"
          target: "~/deploys"

      - name: Rodar Deploy na Homologação via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOMOLOG_HOST }}
          username: ${{ secrets.HOMOLOG_USER }}
          key: ${{ secrets.HOMOLOG_SSH_KEY }}
          script: |
            cd ~/deploys
            docker load < build_homolog.tar
            docker stop frontend_app backend_app postgres_db || true
            docker rm frontend_app backend_app postgres_db || true
            docker-compose -f docker-compose.homolog.yml up -d --force-recreate

  deploy-to-production:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.target_env == 'prod'
    runs-on: ubuntu-latest
    needs: build-and-deploy-homolog

    steps:
      - name: Copiar o build da Homologação para Produção via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOMOLOG_HOST }}
          username: ${{ secrets.HOMOLOG_USER }}
          key: ${{ secrets.HOMOLOG_SSH_KEY }}
          script: |
            scp ~/deploys/build_homolog.tar ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }}:~/deploys/build_prod.tar

      - name: Rodar Deploy na Produção via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd ~/deploys
            docker load < build_prod.tar
            docker stop frontend_app backend_app postgres_db || true
            docker rm frontend_app backend_app postgres_db || true
            docker-compose -f docker-compose.prod.yml up -d --force-recreate
